{"version":3,"sources":["serviceWorker.js","containers/Authorization/Authorization.js","axios-api.js","containers/Cabinet/Cabinet.js","store/actions/actions.js","store/actions/actionTypes.js","App.js","store/reducers/lastSalary.js","store/reducers/sumOfYearSalary.js","store/reducers/sendMoney.js","store/reducers/currentMoney.js","index.js"],"names":["Boolean","window","location","hostname","match","Authorization","state","login","password","inputChangeHandler","event","_this","setState","Object","defineProperty","target","name","value","react_default","a","createElement","react","src","alt","Container","className","Form","Col","FormGroup","Label","Input","type","placeholder","this","onChange","for","id","Button","block","tag","Link","color","to","Component","instance","axios","create","baseURL","Cabinet","amount","activeTab","visible","changeLoadingSum","loadingSum","username","props","params","tab","onFetchLastSalary","onFetchCurrentMoney","_this2","loading","Spinner","style","width","height","Row","md","sm","Toast","ToastHeader","fontSize","fullName","ToastBody","fontWeight","currentMoney","Nav","tabs","NavItem","NavLink","classnames","active","onClick","toggle","TabContent","TabPane","tabId","margin","keys","salary","map","items","key","sumOfYearSalary","onFetchSumOfYearSalary","maxWidth","onFetchSendMoney","connect","lastSalary","sumOfYear","data","sendM","money","dispatch","get","concat","then","response","fetchCurrentMoney","fetchLastSalary","salaries","fetchSumOfYearSalary","fetchSendMoney","App","react_router","path","exact","component","initialState","reducer","arguments","length","undefined","action","objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","lastSalaryReducer","sendMoney","store","createStore","applyMiddleware","thunkMiddleWare","app","es","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbb31f75.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component, Fragment} from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Col} from 'reactstrap';\nimport {Link} from \"react-router-dom\";\nimport './Authorization.css';\n\n\nclass Authorization extends Component {\n    state = {\n        login: \"\",\n        password: \"\"\n    };\n    inputChangeHandler = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <img src=\"https://assets3.insales.ru/assets/1/5727/702047/v_1493949522/build/logo.png\" alt=\"logo\"/>\n                <Container className=\"App\">\n                    <Form className=\"form\">\n                        <Col>\n                            <FormGroup>\n                                <Label>Логин</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"login\"\n                                    placeholder=\"Введите свой логин\"\n                                    value={this.state.login}\n                                    onChange={this.inputChangeHandler}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <FormGroup>\n                                <Label for=\"examplePassword\">Пароль</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"examplePassword\"\n                                    placeholder=\"********\"\n                                    value={this.state.password}\n                                    onChange={this.inputChangeHandler}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Button\n                            className=\"btnA\"\n                            block\n                            tag={Link}\n                            color=\"primary\"\n                            to={'/cabinet/' + this.state.login + '/' + this.state.password}\n                        >\n                            Войти\n                        </Button>\n                    </Form>\n                </Container>\n            </Fragment>\n        );\n    }\n}\n\nexport default Authorization;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://95.59.24.136:8080'\n});\n\nexport default instance;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, Spinner, Container, Toast, ToastHeader, ToastBody, Row, Col, TabContent, TabPane, NavItem, Nav, NavLink} from 'reactstrap';\nimport {fetchLastSalary, fetchSumOfYearSalary, fetchSendMoney, fetchCurrentMoney} from \"../../store/actions/actions\";\nimport classnames from 'classnames';\n\nclass Cabinet extends Component {\n    state = {\n        id: \"\",\n        amount: \"\",\n        activeTab: '1',\n        visible: false\n    };\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n    componentDidMount() {\n        this.props.onFetchLastSalary(this.username, this.password);\n        this.props.onFetchCurrentMoney(this.username, this.password);\n    }\n    inputChangeHandler = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    };\n    changeLoadingSum = (a) => {\n        this.setState({loadingSum: a})\n    };\n    username = this.props.match.params.username;\n    password = this.props.match.params.password;\n    render() {\n        if (this.props.loading) {\n            return <div className=\"d-flex align-items-center flex-column\">\n                        Загурзка...\n                        <Spinner color=\"primary\" style={{width: \"150px\", height: \"150px\"}} />\n                    </div>\n\n        }\n        return (\n            <Container>\n                <Row>\n                    <Col md=\"3\" sm=\"12\">\n                        <div className=\"p-3 bg-success my-2 rounded\">\n                            <Toast>\n                                <ToastHeader>\n                                    <span style={{fontSize: \"25px\"}}>{this.props.fullName}</span>\n                                </ToastHeader>\n                                <ToastBody>\n                                    Доступно:\n                                    <span style={{fontWeight: \"bold\"}}> {this.props.currentMoney}</span>\n                                </ToastBody>\n                            </Toast>\n                        </div>\n                    </Col>\n                    <Col md=\"9\" sm=\"12\">\n                        <div>\n                            <Nav tabs className=\"d-flex flex-column flex-md-row\">\n                                <NavItem>\n                                    <NavLink\n                                        className={classnames({ active: this.state.activeTab === '1' })}\n                                        onClick={() => { this.toggle('1'); }}\n                                    >\n                                        Последняя зарплата\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={classnames({ active: this.state.activeTab === '2' })}\n                                        onClick={() => { this.toggle('2'); }}\n                                    >\n                                        Сумма зарплат\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={classnames({ active: this.state.activeTab === '3' })}\n                                        onClick={() => { this.toggle('3'); }}\n                                    >\n                                        Переводы\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <TabContent activeTab={this.state.activeTab}>\n                                <TabPane tabId=\"1\">\n                                    <Row>\n                                        <Col sm=\"12\" className=\"mb-3\">\n                                            <div className=\"mb-4\">\n                                                <h3 style={{margin: \"23px 0\"}}>Ваша последняя зарплата</h3>\n                                                {Object.keys(this.props.salary).map(items => {\n                                                    return (\n                                                        <p key={items}>{this.props.salary[items]}</p>\n                                                    )\n                                                })}\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </TabPane>\n                                <TabPane tabId=\"2\">\n                                    <Row>\n                                        <Col sm=\"12\" className=\"mb-3\">\n                                            <h3 style={{margin: \"23px 0\"}}>Сумма зарплат</h3>\n                                            {\n                                                    Object.keys(this.props.sumOfYearSalary).map(items => {\n                                                        return (\n                                                            <p key={items}>\n                                                                <b>{items} год</b>: {this.props.sumOfYearSalary[items]}$</p>\n                                                        );\n                                                    })\n\n                                            }\n                                            <Button\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    this.changeLoadingSum(true);\n                                                    this.props.onFetchSumOfYearSalary(this.username, this.password)\n                                                }\n                                                }\n                                            >\n                                                Показать\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </TabPane>\n                                <TabPane tabId=\"3\">\n                                    <Row>\n                                        <Col sm=\"12\" className=\"mb-3 d-flex flex-column align-items-around\" style={{maxWidth: \"400px\"}}>\n                                            <h3 style={{margin: \"23px 0\"}}>Перевод денег</h3>\n                                            <input\n                                                type=\"text\"\n                                                name=\"id\"\n                                                placeholder=\"ID\"\n                                                value={this.state.id}\n                                                onChange={this.inputChangeHandler}\n                                                className=\"mb-2\"\n                                            />\n                                            <input\n                                                type=\"number\"\n                                                name=\"amount\"\n                                                placeholder=\"Сумма\"\n                                                value={this.state.amount}\n                                                onChange={this.inputChangeHandler}\n                                                className=\"mb-2\"\n                                            />\n                                            <Button color=\"primary\" onClick={() => this.props.onFetchSendMoney(this.username, this.password, this.state.id, this.state.amount)}>\n                                                Перевести ${this.state.amount}\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </TabPane>\n                            </TabContent>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        salary: state.lastSalary.salary,\n        loading: state.lastSalary.loading,\n        sumOfYearSalary: state.sumOfYear.sumOfYearSalary,\n        data: state.sendM.data,\n        currentMoney: state.currentMoney.money,\n        fullName: state.currentMoney.fullName,\n        loadingSum: state.sumOfYear.loadingSum\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchCurrentMoney:(username, password) => dispatch(fetchCurrentMoney(username, password)),\n        onFetchLastSalary: (username, password) => dispatch(fetchLastSalary(username, password)),\n        onFetchSumOfYearSalary: (username, password) => dispatch(fetchSumOfYearSalary(username, password)),\n        onFetchSendMoney: (username, password, id, amount) => dispatch(fetchSendMoney(username, password, id, amount))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cabinet);\n\n\n","import {FETCH_LAST_SALARY_SUCCESS, FETCH_CURRENT_MONEY_SUCCESS, FETCH_SUM_OF_YEAR_SALARY_SUCCESS, FETCH_SEND_MONEY_SUCCESS} from \"./actionTypes\";\nimport axios from '../../axios-api';\n\nexport const fetchLastSalarySuccess = (salary) => {\n    return {type: FETCH_LAST_SALARY_SUCCESS, salary}\n};\n\nexport const fetchCurrentMoneySuccess = (money, fullName) => {\n    return {type: FETCH_CURRENT_MONEY_SUCCESS, money, fullName}\n};\n\nexport const fetchSumOfYearSalarySuccess = (salaries) => {\n    return {type: FETCH_SUM_OF_YEAR_SALARY_SUCCESS, salaries}\n};\n\nexport const fetchSendMoneySuccess = (amount) => {\n    return {type: FETCH_SEND_MONEY_SUCCESS, amount}\n};\n\nexport const fetchCurrentMoney = (username, password) => {\n    return dispatch => {\n        axios.get(`/current-money/${username}/${password}`).then(response => {\n            dispatch(fetchCurrentMoneySuccess(response.data.money, response.data.fullName))\n        })\n    }\n};\n\nexport const fetchLastSalary = (username, password) => {\n    return dispatch => {\n        axios.get(`/main/${username}/${password}`).then(response => {\n            dispatch(fetchLastSalarySuccess(response.data))\n        })\n    }\n};\n\nexport const fetchSumOfYearSalary = (username, password) => {\n    return dispatch => {\n        axios.get(`/sum-of-years/${username}/${password}`).then(response => {\n            dispatch(fetchSumOfYearSalarySuccess(response.data))\n        })\n    }\n};\n\nexport const fetchSendMoney = (username, password, id, amount) => {\n    return dispatch => {\n        axios.get(`/send-money/username=${username}&password=${password}&id=${id}&amount=${amount}`).then(response => {\n            dispatch(fetchSendMoneySuccess(response.data))\n        })\n    }\n};","export const FETCH_LAST_SALARY_SUCCESS = 'FETCH_LAST_SALARY_SUCCESS';\nexport const FETCH_SUM_OF_YEAR_SALARY_SUCCESS = 'FETCH_SUM_OF_YEAR_SALARY_SUCCESS';\nexport const FETCH_SEND_MONEY_SUCCESS = 'FETCH_SEND_MONEY_SUCCESS';\nexport const FETCH_CURRENT_MONEY_SUCCESS = 'FETCH_CURRENT_MONEY_SUCCESS';","import React from 'react';\nimport Authorization from \"./containers/Authorization/Authorization\";\nimport {Route, Switch} from \"react-router\";\nimport Cabinet from \"./containers/Cabinet/Cabinet\";\n\nfunction App() {\n  return (\n      <Switch>\n          <Route path='/' exact component={Authorization}/>\n          <Route path='/cabinet/:username/:password' component={Cabinet} />\n      </Switch>\n  );\n}\n\nexport default App;\n","import {FETCH_LAST_SALARY_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    salary: [],\n    loading: true\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_LAST_SALARY_SUCCESS:\n            return {...state, salary: action.salary, loading: false};\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import {FETCH_SUM_OF_YEAR_SALARY_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    sumOfYearSalary: [],\n    loadingSum: true\n};\n\nconst reducer =(state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SUM_OF_YEAR_SALARY_SUCCESS:\n            return {...state, sumOfYearSalary: action.salaries, loadingSum: false};\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import {FETCH_SEND_MONEY_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    data: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SEND_MONEY_SUCCESS:\n            return {...state, data: action.amount}\n        default:\n            return state\n    }\n};\n\nexport default reducer;","import {FETCH_CURRENT_MONEY_SUCCESS} from '../actions/actionTypes';\n\nconst initialState = {\n    money: [],\n    fullName: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FETCH_CURRENT_MONEY_SUCCESS:\n            return {...state, money: action.money, fullName: action.fullName};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose, combineReducers} from \"redux\";\nimport {Provider} from 'react-redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport lastSalaryReducer from './store/reducers/lastSalary';\nimport sumOfYearSalary from './store/reducers/sumOfYearSalary';\nimport sendMoney from './store/reducers/sendMoney';\nimport currentMoney from './store/reducers/currentMoney';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    lastSalary: lastSalaryReducer,\n    sumOfYear: sumOfYearSalary,\n    sendM: sendMoney,\n    currentMoney: currentMoney\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleWare)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}